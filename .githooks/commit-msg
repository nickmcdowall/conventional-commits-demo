#!/bin/bash

#
# This hook checks the commit message header only to ensure that the expected format is used
#
# Changes with breaking changes should include BREAKING CHANGE in the commit body (this is not validated by this hook since
#  we can't know whether a change is breaking or not but rely on the user including the `BREAKING CHANGE` keywords.
# 
 
commit_regex='^((build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test)(\([a-zA-Z0-9 /_,.-]+?\))?: .{1,79}\w|Merge branch .+|(fixup|squash)! .+)$'

error_msg='
----------------------------------------------------
ABORTING commit - Expecting a conventional commit message header: 
    
      <type>[(optional scope)]: <summary - MAX 80 chars>
----------------------------------------------------
Examples:
1.
  fix(cache): Fixe nasty caching bug (#123)
2.  
  feat: Enable awesome feature (#456)
3. 
  docs: Add instructions to README
----------------------------------------------------
Accepted Types:
  build     - for changes that affect the build or external dependencies
  chore     - for general maintenance changes
  ci        - for changes related to the ci pipeline
  docs      - for documentation changes
  feat      - for features [* triggers a MINOR release when pushed]
  fix       - for fixes [* triggers a PATCH release when pushed]
  perf      - for performance related changes
  refactor  - for refactoring
  revert    - for revert commits
  style     - for style changes
  test      - for adding or updating tests
----------------------------------------------------
Exceptions:
  fixup! ... 
  squash! ...
  Merge branch ...
'

if ! grep -iqE "${commit_regex}" "$1"; then
    echo "${error_msg}" >&2
    exit 1
fi